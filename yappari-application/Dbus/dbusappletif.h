/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c DBusAppletIf -p dbusappletif.h:dbusappletif.cpp org.scorpius.YappariApplet.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DBUSAPPLETIF_H_1396374440
#define DBUSAPPLETIF_H_1396374440

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.scorpius.YappariApplet
 */
class DBusAppletIf: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.scorpius.YappariApplet"; }

public:
    DBusAppletIf(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~DBusAppletIf();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> HideApplet()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("HideApplet"), argumentList);
    }

    inline QDBusPendingReply<> Notify()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Notify"), argumentList);
    }

    inline QDBusPendingReply<> ShowApplet()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("ShowApplet"), argumentList);
    }

    inline QDBusPendingReply<> status(const QString &text)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(text);
        return asyncCallWithArgumentList(QLatin1String("status"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace scorpius {
    typedef ::DBusAppletIf YappariApplet;
  }
}
#endif
